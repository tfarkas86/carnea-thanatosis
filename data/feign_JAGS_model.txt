model{
  
  # priors on beta
  
  b0 ~ dnorm(0, 0.0001)
  b.tmnt_starve ~ dnorm(0, 0.0001)
  b.tmnt_junk ~ dnorm(0, 0.0001)
  #b.tmnt_one ~ dnorm(0, 0.0001)
  #b.tmnt_two ~ dnorm(0, 0.0001)
  b.sex ~ dnorm(0, 0.0001)
  b.int_starve ~ dnorm(0, 0.0001)
  b.int_junk ~ dnorm(0, 0.0001)
  # b.int_one ~ dnorm(0, 0.0001)
  # b.int_two ~ dnorm(0, 0.0001)

  # likelihood
  
  for (i in 1:enn) {
  
  y[i] ~ dpois(mu[i])

  #eta[i] <- b0 + b.tmnt_starve * tmnt_starve[i] + b.tmnt_junk * tmnt_junk[i] + b.sex * c.sex[i]
  #eta[i] <- b0 + b.tmnt_starve * tmnt_starve[i] + b.tmnt_junk * tmnt_junk[i] 
  #eta[i] <- b0 + b.tmnt_one * tmnt_one[i] + b.tmnt_two * tmnt_two[i]

  log(mu[i]) <- b0 + 
            b.tmnt_starve * tmnt_starve[i] + 
            b.tmnt_junk * tmnt_junk[i] + 
            b.sex * c.sex[i] +
            b.int_starve * tmnt_starve[i] * c.sex[i] + 
            b.int_junk * tmnt_junk[i] * c.sex[i]

  }
  
  # discrepancy measures
  
  for (i in 1:enn) {  
  exp[i] <- p[i]
  Var[i] <- p[i] 
  e[i] <- (y[i] - exp[i]) / sqrt(Var[i]) # pearson residuals
  d[i] <- pow(e[i], 2)
  
  }
  
  # simulate new data
  
  for (i in 1:enn) {
  
  ynew[i] ~ dbern(p[i])
  enew[i] <- (ynew[i] - exp[i]) / sqrt(Var[i])
  dnew[i] <- pow(enew[i], 2)
  
  }
  
  fit <- sum(d[1:enn])
  fitnew <- sum(dnew[1:enn])
  
  }
